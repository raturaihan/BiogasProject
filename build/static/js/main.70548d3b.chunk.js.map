{"version":3,"sources":["components/chart/Chart.jsx","components/parameterinfo/ChipDesk.jsx","components/parameterinfo/ChipMob.jsx","components/parameterinfo/Parameterinfo.jsx","components/navbar/NavbarElements.js","components/navbar/Buttonlog.jsx","components/navbar/Buttonlogmob.jsx","components/navbar/index.js","Pages/Graphic/Graphic.jsx","components/Tabel/Tabel.jsx","Pages/LogData/Logdata.jsx","Pages/navbar.js","Pages/Info/info.jsx","Pages/Login/login.jsx","App.js","serviceWorkerRegistration.js","index.js"],"names":["Chart","data","useState","dataTemperature","setDataTemperature","datapH","setDatapH","dataPressure","setDataPressure","useEffect","reverse","map","object","Waktu","device_data","time","slice","Temperature","temperatureValue","pH","phValue","Pressure","pressureValue","className","ResponsiveContainer","width","aspect","LineChart","XAxis","dataKey","stroke","YAxis","Line","type","Tooltip","CartesianGrid","strokeDasharray","styled","Chip","WarningAmberIcon","Parameterinfo","formatDate","string","Date","toLocaleDateString","year","month","day","console","log","Grid","item","xs","sm","container","length","temperatureStatus","direction","spacing","icon","color","label","title","enterTouchDelay","phStatus","ChipDesk","ChipMob","pressureStatus","Nav","nav","NavLink","Link","NavMenu","div","Header","h1","Button","IconButton","Navbar","navigate","useNavigate","handleSubmit","event","localStorage","clear","to","Buttonlog","startIcon","variant","onClick","size","Graphics","Graphic","state","getItem","isFetched","setIsFetched","dataParameter","setDataParameter","axios","post","JSON","stringify","then","res","catch","err","response","responsive","RedText","withStyles","root","fontStyle","Typography","Tabel","React","page","setPage","rowsPerPage","setRowsPerPage","columns","id","format","value","align","DataLog","TableTitle","DataInfo","Paper","sx","overflow","TableContainer","maxHeight","Table","stickyHeader","TableHead","TableRow","column","TableCell","style","minWidth","TableBody","row","hover","role","tabIndex","code","TablePagination","rowsPerPageOptions","component","count","onPageChange","newPage","onRowsPerPageChange","target","h3","PilihTanggal","Log","Logdata","setValue","moment","undefined","fetchData","LocalizationProvider","dateAdapter","AdapterDateFns","MobileDatePicker","inputFormat","onChange","renderInput","params","TextField","Alert","severity","Signup","FontSize","BackgroundStyle","PaperStyle","href","Login","setId","password","setPassword","alert","setAlert","Wrapper","fullWidth","e","placeholder","btnStyle","preventDefault","payload","setItem","disabled","margin","backgroundColor","fontWeight","PrivateRoute","children","PublicRoute","App","exact","path","element","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","error","ReactDOM","render","StrictMode","document","getElementById","URL","process","origin","addEventListener","fetch","headers","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker","serviceWorkerRegistration"],"mappings":"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","file":"static/js/main.70548d3b.chunk.js","sourcesContent":["import \"./chart.css\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { LineChart, XAxis, YAxis, Line, Tooltip, CartesianGrid, ResponsiveContainer } from 'recharts';\r\n\r\nexport default function Chart({data}) {\r\n\r\n  const [dataTemperature, setDataTemperature] = useState([]);\r\n  const [datapH, setDatapH] = useState([]);\r\n  const [dataPressure, setDataPressure] = useState([]);\r\n \r\n  // const dataTemperature = data.reverse().map(object => (\r\n  //   {\r\n  //     Waktu: object.device_data.time.slice(11,16),\r\n  //     Temperature: object.device_data.temperatureValue,\r\n  //   } \r\n  // ));\r\n\r\n  // const datapH = data.reverse().map(object => (\r\n  //   {\r\n  //     Waktu: object.device_data.time.slice(11,16),\r\n  //     pH: object.device_data.phValue,\r\n  //   }\r\n  // ));\r\n\r\n  // const dataPressure = data.reverse().map(object => (\r\n  //   {\r\n  //     Waktu: object.device_data.time.slice(11,16),\r\n  //     Pressure: object.device_data.pressureValue,\r\n  //   }\r\n  // ));\r\n\r\n  useEffect(()=> {\r\n    setDataTemperature(data.reverse().map(object => (\r\n      {\r\n        Waktu: object.device_data.time.slice(11,16),\r\n        Temperature: object.device_data.temperatureValue,\r\n      } \r\n    )));\r\n\r\n    setDatapH(data.reverse().map(object => (\r\n      {\r\n        Waktu: object.device_data.time.slice(11,16),\r\n        pH: object.device_data.phValue,\r\n      } \r\n    )));\r\n\r\n\r\n    setDataPressure(data.reverse().map(object => (\r\n      {\r\n        Waktu: object.device_data.time.slice(11,16),\r\n        Pressure: object.device_data.pressureValue,\r\n      }\r\n    )));\r\n  }, [])\r\n\r\n  \r\n    return (\r\n      <div className=\"chart\">\r\n        <div className=\"chartSuhu\">\r\n            <h3 className=\"chartTitle\">Suhu Slurry</h3>\r\n            <ResponsiveContainer width=\"100%\" aspect={4/1}>\r\n                <LineChart data={dataTemperature}>\r\n                    <XAxis dataKey=\"Waktu\" stroke=\"#355E3B\"/>\r\n                    <YAxis stroke=\"#355E3B\"/>\r\n                    <Line type=\"monotone\" dataKey=\"Temperature\" stroke=\"#008080\"/>\r\n                    <Tooltip/>\r\n                    <CartesianGrid stroke=\"#e0dfdf\" strokeDasharray=\"5 5\"/>\r\n                </LineChart>\r\n            </ResponsiveContainer>\r\n        </div>\r\n        <div className=\"chartpH\">\r\n        <h3 className=\"chartTitle\">pH Slurry</h3>\r\n            <ResponsiveContainer width=\"100%\" aspect={4/1}>\r\n                <LineChart data={datapH}>\r\n                    <XAxis dataKey=\"Waktu\" stroke=\"#355E3B\"/>\r\n                    <YAxis stroke=\"#355E3B\"/>\r\n                    <Line type=\"monotone\" dataKey=\"pH\" stroke=\"#008080\"/>\r\n                    <Tooltip/>\r\n                    <CartesianGrid stroke=\"#e0dfdf\" strokeDasharray=\"5 5\"/>\r\n                </LineChart>\r\n            </ResponsiveContainer>\r\n        </div>\r\n        <div className=\"chartTekanan\">\r\n            <h3 className=\"chartTitle\">Tekanan Gas</h3>\r\n            <ResponsiveContainer width=\"100%\" aspect={4/1}>\r\n                <LineChart data={dataPressure}>\r\n                    <XAxis dataKey=\"Waktu\" stroke=\"#355E3B\"/>\r\n                    <YAxis stroke=\"#355E3B\"/>\r\n                    <Line type=\"monotone\" dataKey=\"Pressure\" stroke=\"#008080\"/>\r\n                    <Tooltip/>\r\n                    <CartesianGrid stroke=\"#e0dfdf\" strokeDasharray=\"5 5\"/>\r\n                </LineChart>\r\n            </ResponsiveContainer>\r\n        </div>\r\n      </div>\r\n    )\r\n}","import styled from \"styled-components\";\r\nimport {Chip} from \"@material-ui/core\"\r\n\r\nexport default styled(Chip)`\r\n  && {\r\n    position: absolute;\r\n    border-radius: 15px;\r\n    background-color: #FFFAA0;\r\n    font-weight: bold;\r\n    border: none;\r\n    @media (max-width: 767px){\r\n      display: none;\r\n  }\r\n  }\r\n`;","import styled from \"styled-components\";\r\nimport WarningAmberIcon from '@mui/icons-material/WarningAmber';\r\n\r\nexport default styled(WarningAmberIcon)`\r\n  && {\r\n    position: absolute;\r\n    margin-top: 7px;\r\n    color: orange;\r\n    border: none;\r\n    @media (min-width: 768px){\r\n      display: none;\r\n  }\r\n  }\r\n`;","import \"./parameterinfo.css\"\r\nimport {Chip, Tooltip, Grid} from \"@material-ui/core\"\r\nimport WarningAmberIcon from '@mui/icons-material/WarningAmber';\r\nimport InfoOutlinedIcon from '@mui/icons-material/InfoOutlined';\r\nimport ChipDesk from \"./ChipDesk\"\r\nimport ChipMob from \"./ChipMob\"\r\n\r\nexport default function Parameterinfo({data}) {\r\nconsole.log(data);\r\n\r\n  function formatDate(string){\r\n    var options = { year: 'numeric', month: 'long', day: 'numeric' };\r\n    return new Date(string).toLocaleDateString([],options);\r\n}\r\n\r\n    return (\r\n        <div className=\"parameter\">\r\n            <div className=\"parameterItem\"  >  \r\n                <Grid item xs={12} sm container>\r\n                {data[data.length-1].device_data.temperatureStatus === 1?\r\n                    <Grid item xs container direction=\"column\" spacing={2}>\r\n                    <item>\r\n                        <Chip icon={<WarningAmberIcon color=\"warning\"/>} label=\"Warning\" color=\"#FFFF00\" />\r\n                    </item></Grid>: <></>}\r\n                    <Grid item>\r\n                    <item>\r\n                        <Tooltip title={<div>\r\n                                            <div>25 - 35 C : Normal</div>\r\n                                        </div>} enterTouchDelay={0}>\r\n                            <InfoOutlinedIcon color=\"disabled\" />\r\n                        </Tooltip>\r\n                    </item></Grid>\r\n                </Grid>\r\n                <div className=\"parameterTitle\">Suhu Slurry</div>\r\n                <div className=\"nilaiParameter\">\r\n                    <span className=\"Data\"> {data[data.length-1].device_data.temperatureValue} C</span>\r\n                </div>\r\n                <div><span className=\"tanggal\">{formatDate(data[data.length-1].device_data.time.slice(0,10))}</span></div>\r\n                <span className=\"waktu\"> {data[data.length-1].device_data.time.slice(11,16)}</span>\r\n            </div> \r\n            <div className=\"parameterItem\">\r\n                <Grid item xs={12} sm container>\r\n                        {data[data.length-1].device_data.phStatus === 1?\r\n                        <Grid item xs container direction=\"column\" spacing={2}>\r\n                        <item>\r\n                            <ChipDesk icon={<WarningAmberIcon color=\"warning\"/>} label=\"Warning\" color=\"warning\" />\r\n                            <ChipMob icon={<WarningAmberIcon color=\"warning\"/>}  color=\"warning\" />\r\n                        </item></Grid>: <></>}\r\n                        <Grid item>\r\n                        <item>\r\n                            <Tooltip title={<div>\r\n                                                <div>6.8 - 7 : Normal</div>\r\n                                            </div>} enterTouchDelay={0}>\r\n                                <InfoOutlinedIcon color=\"disabled\" />\r\n                            </Tooltip>\r\n                        </item></Grid>\r\n                    </Grid>\r\n                <span className=\"parameterTitle\">pH Slurry</span>\r\n                <div className=\"nilaiParameter\">\r\n                    <span className=\"Data\">{data[data.length-1].device_data.phValue}</span>\r\n                </div>\r\n                <div><span className=\"tanggal\">{formatDate(data[data.length-1].device_data.time.slice(0,10))}</span></div>\r\n                <span className=\"waktu\">{data[data.length-1].device_data.time.slice(11,16)}</span>\r\n            </div> \r\n            <div className=\"parameterItem2\">\r\n                <Grid item xs={12} sm container>\r\n                {data[data.length-1].device_data.pressureStatus === 1?\r\n                        <Grid item xs container direction=\"column\" spacing={2}>\r\n                        <item>\r\n                            <Chip icon={<WarningAmberIcon color=\"warning\"/>} label=\"Warning\" color=\"#FFFF00\" />\r\n                        </item></Grid>\r\n                : <></>}\r\n                        <Grid item>\r\n                        <item>\r\n                            <Tooltip title={<div>\r\n                                                <div> 0 - 2.8 KPa : Normal</div>\r\n                                            </div>} enterTouchDelay={0}>\r\n                                <InfoOutlinedIcon color=\"disabled\" />\r\n                            </Tooltip>\r\n                        </item></Grid>\r\n                    </Grid>\r\n                <span className=\"parameterTitle\">Tekanan Gas</span>\r\n                <div className=\"nilaiParameter\">\r\n                    <span className=\"Data\">{data[data.length-1].device_data.pressureValue}</span>\r\n                </div>\r\n                <div><span className=\"tanggal\">{formatDate(data[data.length-1].device_data.time.slice(0,10))}</span></div>\r\n                <span className=\"waktu\">{data[data.length-1].device_data.time.slice(11,16)}</span>\r\n            </div> \r\n        </div>\r\n    )\r\n}\r\n","import styled from 'styled-components'\r\nimport {NavLink as Link} from 'react-router-dom'\r\n\r\n\r\nexport const Nav = styled.nav`\r\n  background-color:#cbe8ba;\r\n  height: 60px;\r\n  display: flexbox;\r\n  position: sticky;\r\n  z-index: 10;\r\n  padding: 0.5rem calc((100vw - 1000px) / 2);\r\n\r\n`\r\nexport const NavLink = styled(Link)`\r\n    font-weight: bold;\r\n    color:grey;\r\n    display:flex;\r\n    align-items: center;\r\n    text-decoration: none;\r\n    padding: 0 1rem;\r\n    height: 100%\r\n    cursor: PointerEvent;\r\n\r\n    &.active{\r\n      color:#243e16;\r\n    }\r\n`\r\nexport const NavMenu = styled.div`\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    width: 100%;\r\n    padding-top:0;\r\n    margin-bottom: 0;\r\n`\r\n\r\nexport const Header = styled.h1`\r\n    position: absolute;\r\n    left: 10px;\r\n    color:#243e16;\r\n    display: block;\r\n    @media (max-width: 1023px){\r\n        display: none;\r\n    }\r\n`","import styled from \"styled-components\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nexport default styled(Button)`\r\n  && {\r\n    position: absolute;\r\n    right: 15px;\r\n    border-radius: 20px;\r\n    background-color: white;\r\n    border: none;\r\n    @media (max-width: 767px){\r\n      display: none;\r\n  }\r\n  }\r\n`;\r\n","import styled from \"styled-components\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\n\r\nexport default styled(IconButton)`\r\n  && {\r\n    position: absolute;\r\n    right: 15px;\r\n    border-radius: 25px;\r\n    background-color: white;\r\n    border: none;\r\n    display: block;\r\n    @media (min-width: 768px){\r\n        display: none;\r\n    }\r\n  }\r\n`;","import React from 'react'\r\nimport{Nav, NavLink, NavMenu, Header} from \"./NavbarElements\"\r\nimport { useNavigate } from 'react-router-dom';\r\nimport LogoutIcon from '@mui/icons-material/Logout';\r\nimport Buttonlog from \"./Buttonlog\"\r\nimport IconButtonlog from \"./Buttonlogmob\"\r\n\r\nconst Navbar = () => {\r\n    const navigate = useNavigate();\r\n\r\n    function handleSubmit(event) {\r\n        navigate('/'); \r\n        localStorage.clear();\r\n    }\r\n\r\n    return (\r\n        <>\r\n         <Nav>\r\n            <NavMenu>\r\n                <Header>SmartBiogas</Header>\r\n                <NavLink to=\"/graphic\">\r\n                    GRAFIK\r\n                </NavLink>\r\n                <NavLink to=\"/logdata\">\r\n                    DATA HISTORIS\r\n                </NavLink>\r\n                <NavLink to=\"/\">\r\n                    <Buttonlog startIcon={<LogoutIcon />} type='submit' variant='outlined' onClick={handleSubmit}>Log Out</Buttonlog>\r\n                    <IconButtonlog aria-label=\"logout\" size=\"medium\" onClick={handleSubmit}><LogoutIcon /></IconButtonlog>\r\n                </NavLink>\r\n            </NavMenu>\r\n         </Nav>  \r\n        </>\r\n    )\r\n}\r\n\r\nexport default Navbar\r\n","import Chart from \"../../components/chart/Chart\"\r\nimport Parameterinfo from \"../../components/parameterinfo/Parameterinfo\"\r\nimport styled from 'styled-components'\r\nimport Nav from '../../components/navbar/index'\r\nimport axios from 'axios'\r\nimport { useEffect, useState } from 'react'\r\n\r\n\r\n\r\nconst Graphic=()=>{\r\n    const state=localStorage.getItem('dev_id');\r\n    console.log(state);\r\n    console.log('tes masuk graphic')\r\n\r\n    const [isFetched, setIsFetched] = useState(false);\r\n\r\n    const [dataParameter, setDataParameter] = useState([]);\r\n\r\n    // call api to get most recent datas\r\n    useEffect(()=>{\r\n        if(!isFetched) {\r\n        axios.post('https://ehy3b0lyhk.execute-api.us-east-1.amazonaws.com/release/recentbiogas', JSON.stringify({\r\n        \"device_id\": state\r\n        }))\r\n        .then((res)=>{\r\n            console.log(res.data);\r\n            console.log(res.data[0].device_data.time.slice(11,16));\r\n            console.log(\"test\");\r\n            setDataParameter(res.data);\r\n            setIsFetched(true);\r\n        })\r\n        .catch((err)=>{\r\n            console.log(err.response.data);\r\n        })\r\n        }\r\n    },[isFetched,state]);\r\n    \r\n\r\n    return (\r\n        <div>\r\n            <Nav />\r\n            <Graphics>\r\n                {dataParameter.length !==0 ? <Parameterinfo data={dataParameter} responsive=\"scroll\"/> : null}\r\n                {dataParameter.length !==0 ? <Chart data={dataParameter} /> : null}\r\n            </Graphics>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst Graphics = styled.div`\r\n    flex:4\r\n`;\r\n\r\nexport default Graphic;","import styled from 'styled-components'\r\nimport * as React from 'react';\r\nimport {Paper,Table,TableBody,TableCell,TableContainer,TableHead,TablePagination,TableRow, Typography} from '@mui/material';\r\nimport {Grid, Tooltip} from \"@material-ui/core\"\r\nimport InfoOutlinedIcon from '@mui/icons-material/InfoOutlined';\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\n\r\n\r\nconst RedText = withStyles({\r\n  root: {\r\n    color: \"red\",\r\n    fontStyle: \"bold\"\r\n  }\r\n})(Typography);\r\n\r\nexport default function Tabel({data}) {\r\n  console.log(data);\r\n\r\n  const [page, setPage] = React.useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\r\n\r\n    function formatDate(string){\r\n      var options = { year: 'numeric', month: 'long', day: 'numeric' };\r\n        return new Date(string).toLocaleDateString([],options);\r\n    }\r\n  \r\n    const handleChangePage = (event, newPage) => {\r\n      setPage(newPage);\r\n    };\r\n  \r\n    const handleChangeRowsPerPage = (event) => {\r\n      setRowsPerPage(+event.target.value);\r\n      setPage(0);\r\n    };\r\n\r\n    const columns = [\r\n        { id: 'time', \r\n          label: 'Tanggal', \r\n          width: 100 , \r\n          format: (value) => formatDate(value.slice(0,10))\r\n        },\r\n        { id: 'time', \r\n          label: 'Waktu', \r\n          width: 100,\r\n          format: (value) => value.slice(11,16)\r\n         },\r\n        {\r\n          id: 'temperatureValue',\r\n          label: 'Suhu\\u00a0Slurry',\r\n          width: 100,\r\n          align: 'right',\r\n          format: (value) => value > 35 || value <25 ? <RedText>{value}</RedText> : value,\r\n        },\r\n        {\r\n          id: 'phValue',\r\n          label: 'pH\\u00a0Slurry',\r\n          width: 100,\r\n          align: 'right',\r\n          format: (value) => value > 7 || value < 6.8 ? <RedText>{value}</RedText> : value,\r\n        },\r\n        {\r\n          id: 'pressureValue',\r\n          label: 'Tekanan\\u00a0Gas',\r\n          width: 100,\r\n          align: 'right',\r\n          format: (value) => value > 2800 ? <RedText>{value}</RedText> : value,\r\n        },\r\n      ];\r\n      \r\n    return (\r\n        <div className=\"Tabel\">\r\n            <DataLog>\r\n            <Grid item xs={12} sm container>\r\n              <Grid item xs container direction=\"column\" spacing={2}>\r\n                <item><TableTitle>Data Historis</TableTitle></item>\r\n              </Grid>\r\n              <item>\r\n              <DataInfo>\r\n                <Tooltip title={<div>\r\n                                  <div>Suhu Normal: 25 - 35 C </div>\r\n                                  <div>pH Normal: 6.8 - 7</div>\r\n                                  <div>Tekanan Gas Normal: 0 - 2800 Pa</div>\r\n                                </div>}enterTouchDelay={0}>\r\n                <InfoOutlinedIcon color=\"disabled\" />\r\n                </Tooltip>\r\n              </DataInfo></item>\r\n            </Grid>\r\n          <Paper sx={{ width: '100%', overflow: 'hidden' }}>\r\n          <TableContainer sx={{ maxHeight: 440 }}>\r\n              <Table stickyHeader aria-label=\"sticky table\">\r\n              <TableHead>\r\n                  <TableRow>\r\n                  {columns.map((column) => (\r\n                      <TableCell\r\n                      key={column.id}\r\n                      align={column.align}\r\n                      style={{ minWidth: column.minWidth }}\r\n                      >\r\n                      {column.label}\r\n                      </TableCell>\r\n                  ))}\r\n                  </TableRow>\r\n              </TableHead>\r\n              <TableBody>\r\n                  {data\r\n                  .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n                  .map((row) => {\r\n                      return (\r\n                      <TableRow hover role=\"checkbox\" tabIndex={-1} key={row.code}>\r\n                          {columns.map((column) => {\r\n                          const value = row[\"device_data\"][column.id];\r\n                          return (\r\n                              <TableCell key={column.id} align={column.align}>\r\n                              {column.format\r\n                                  ? column.format(value)\r\n                                  : value}\r\n                              {/* {value} */}\r\n                              </TableCell>\r\n                          );\r\n                          })}\r\n                      </TableRow>\r\n                      );\r\n                  })}\r\n              </TableBody>\r\n              </Table>\r\n          </TableContainer>\r\n          <TablePagination\r\n              rowsPerPageOptions={[10, 25]}\r\n              component=\"div\"\r\n              count={data.length}\r\n              rowsPerPage={rowsPerPage}\r\n              page={page}\r\n              onPageChange={handleChangePage}\r\n              onRowsPerPageChange={handleChangeRowsPerPage}\r\n          />\r\n          </Paper>     \r\n          </DataLog>\r\n    </div>\r\n    )\r\n}\r\n\r\nconst DataLog=styled.div`\r\n  margin: 30px 78px;\r\n  padding: 20px;\r\n  box-shadow: 1px 1px 3px 0px rgba(0,0,0,0.3);\r\n  -webkit-box-shadow: 1px 1px 3px 0px rgba(0,0,0,0.3);\r\n  -moz-box-shadow: 1px 1px 3px 0px rgba(0,0,0,0.3);\r\n  background-color: #F9FCF8;\r\n  @media (max-width: 767px){\r\n    margin: 30px 30px;\r\n    padding: 10px;\r\n  }\r\n`;\r\n\r\nconst DataInfo=styled.div`\r\n  right: 25px;\r\n`;\r\n\r\nconst TableTitle=styled.h3`\r\n  text-align: center;\r\n  width:100%;\r\n  z-index: 5;\r\n`;\r\n","import styled from 'styled-components'\r\nimport Tabel from \"../../components/Tabel/Tabel\"\r\nimport Nav from '../../components/navbar/index'\r\nimport { useEffect, useState } from 'react'\r\nimport axios from 'axios'\r\nimport moment from 'moment'\r\nimport * as React from 'react';\r\nimport { Alert } from '@mui/material';\r\nimport TextField from '@mui/material/TextField';\r\nimport AdapterDateFns from '@mui/lab/AdapterDateFns';\r\nimport LocalizationProvider from '@mui/lab/LocalizationProvider';\r\nimport MobileDatePicker from '@mui/lab/MobileDatePicker';\r\n  \r\n  const PilihTanggal=styled.div`\r\n      margin: 30px;\r\n      position: \"relative\";\r\n      z-Index: 2000;\r\n  `;\r\n  \r\n\r\nconst Logdata=()=>{\r\n    const [value, setValue] = React.useState(new Date());\r\n  \r\n    const handleChange = (value) => {\r\n      setValue(value);\r\n      setIsFetched(false);\r\n    };\r\n\r\n    console.log('tes masuk logdata');\r\n    console.log(value);\r\n    const [isFetched, setIsFetched] = useState(false);\r\n    const [dataParameter, setDataParameter] = useState([]);\r\n\r\n    const fetchData=(value)=>{\r\n        const state=localStorage.getItem('dev_id');\r\n        console.log(state);\r\n\r\n        axios.post('https://ehy3b0lyhk.execute-api.us-east-1.amazonaws.com/release/logdatabiogas', JSON.stringify({\r\n            \"device_id\": state,\r\n            \"date\" : moment(value).format('YYYY-MM-DD')\r\n            }))\r\n            .then((res)=>{\r\n                if(res.data !== undefined) {\r\n                 console.log(res.data);\r\n                 console.log(\"test\");\r\n                 setDataParameter(res.data);\r\n                 setIsFetched(true);\r\n                }\r\n             })\r\n            .catch((err)=>{\r\n                 console.log(err.response.data);\r\n            })\r\n    }\r\n\r\n    useEffect(()=>{\r\n        if(!isFetched) {\r\n            fetchData(value);\r\n        }\r\n    },[isFetched]);\r\n    \r\n    return (\r\n        <div>\r\n            <Nav />\r\n            <Log>\r\n            <PilihTanggal>\r\n                <LocalizationProvider dateAdapter={AdapterDateFns}>\r\n                <MobileDatePicker\r\n                    label=\"Masukan Tanggal\"\r\n                    inputFormat=\"yyyy-MM-dd\"\r\n                    value={value}\r\n                    onChange={handleChange}\r\n                    renderInput={(params) => <TextField {...params} />}\r\n                />\r\n                </LocalizationProvider>\r\n            </PilihTanggal>\r\n                {dataParameter.length !==0 ? <Tabel data={dataParameter} />\r\n                : <Alert severity='error'>Data Tidak Ditemukan! Silahkan Pilih Tanggal Lain</Alert>}\r\n            </Log>\r\n        </div>\r\n    )\r\n }\r\n\r\n const Log = styled.div`\r\n    flex:4;\r\n `;\r\n\r\n export default Logdata;","import styled from 'styled-components'\r\n\r\nexport const Nav = styled.nav`\r\n    height:80px;\r\n    display:flexbox;\r\n    position:sticky;\r\n    z-index:10;\r\n    font-weight:bold;\r\n    color:#243e16;\r\n    @media (max-width: 1023px){\r\n        background-color: #cbe8ba;\r\n        height:80px;\r\n        display:flexbox;\r\n        position:sticky;\r\n        z-index:10;\r\n        font-weight:bold;\r\n        color:#243e16;\r\n    }\r\n`\r\n\r\n","import React from 'react'\r\nimport {Grid,Typography,Link} from '@material-ui/core'\r\nimport {Nav} from \"../navbar\"\r\nimport styled from 'styled-components';\r\n\r\nconst Signup=()=>{\r\n    return(\r\n        <Grid>\r\n        <Nav>\r\n            <h1 style={{FontSize:'30px'}}>SmartBiogas</h1>\r\n        </Nav> \r\n        <BackgroundStyle>\r\n            <PaperStyle>\r\n                <Grid align='center' >\r\n                    <h2>Cara Mendapatkan ID</h2>\r\n                </Grid>\r\n                <h4>1. ID hanya didapatkan pada produk yang sudah dibeli</h4>\r\n                <h4>2. Produk yang diterima akan dilengkapi ID beserta passwordnya</h4>\r\n                <h4>3. ID dan password bersifat rahasia dan tidak dapat diubah</h4>\r\n                <Typography>Sudah punya ID?\r\n                    <Link href=\"/\"> Masuk Akun\r\n                    </Link>\r\n                </Typography>\r\n            </PaperStyle>\r\n        </BackgroundStyle>\r\n        </Grid>\r\n    )\r\n}\r\n\r\nexport default Signup;\r\n\r\nconst PaperStyle = styled.div`\r\n  height: 390px;\r\n  width: 355px;\r\n  padding: 20px;\r\n  border-radius: 5px;\r\n  margin-left: auto;\r\n  margin-right: auto;\r\n  background-color: white;\r\n  box-shadow: 1px 1px 3px 0px rgba(0,0,0,0.5);\r\n  -webkit-box-shadow: 1px 1px 3px 0px rgba(0,0,0,0.5);\r\n  -moz-box-shadow: 1px 1px 3px 0px rgba(0,0,0,0.5);\r\n  @media (max-width: 1023px){\r\n    background-color: white;\r\n    height: 300px;\r\n    width: 255px;\r\n    margin-left: auto;\r\n    margin-right: auto;\r\n  }\r\n`\r\nconst BackgroundStyle = styled.div`\r\n    background-color:#cbe8ba;\r\n    padding:10;\r\n    height:432px;\r\n    width:100%;\r\n    margin:0px auto;\r\n    @media (max-width: 1023px){\r\n        background-color: #cbe8ba;\r\n        height: 1000px;\r\n        width: 100%;\r\n     }\r\n`","import {Grid,TextField,Button,Typography,Link} from '@material-ui/core';\r\nimport { Alert } from '@mui/material';\r\nimport styled from 'styled-components';\r\nimport {Nav} from \"../navbar\";\r\nimport axios from 'axios';\r\n\r\nimport React, { useState } from \"react\";\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nexport default function Login() {\r\n  const [id, setId] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const navigate = useNavigate();\r\n  const [alert, setAlert] = useState(false);\r\n\r\n  function validateForm() {\r\n    return id.length > 0 && password.length > 0;\r\n  }\r\n\r\n  function handleSubmit(event) {\r\n    event.preventDefault();\r\n\r\n    axios.post('https://ehy3b0lyhk.execute-api.us-east-1.amazonaws.com/release/loginbiogas',JSON.stringify({\r\n      \"device_id\": id,\r\n      \"password\": password\r\n    }))\r\n    .then((res)=>{\r\n      // console.log(res.data.payload)\r\n      if(res.data.payload === 1){// if id and password matches\r\n        // navigate to graphic page, save device id as state\r\n        navigate('/graphic', { state: id }); \r\n        localStorage.setItem('dev_id', id);\r\n        // no alert\r\n        setAlert(false);\r\n      }\r\n      else{// if incorrect password\r\n        // alert the user\r\n        setAlert(true);\r\n      }\r\n    })\r\n    .catch((err)=>{ // if error (iID/password not found/ not match)\r\n      // alert the user\r\n      setAlert(true);\r\n    })\r\n  }\r\n\r\n  return(\r\n    <Grid>\r\n    {alert ? <Alert severity='error'>Password atau ID Salah! Silahkan Coba Lagi</Alert> : <></> }\r\n    <Nav>\r\n      <h1>SmartBiogas</h1>\r\n    </Nav> \r\n    <Wrapper >\r\n      <PaperStyle>\r\n        <Grid align='center' >\r\n          <h2>Masuk Akun</h2>\r\n        </Grid>\r\n        <Grid container direction={\"column\"} spacing={3}>\r\n        <Grid item>\r\n        <TextField \r\n          fullWidth\r\n          label=\"ID\" \r\n          value={id}\r\n          onChange={(e) => setId(e.target.value)}\r\n          placeholder='Masukan ID Anda'\r\n          variant=\"outlined\"\r\n          size='small'\r\n        />\r\n        </Grid>\r\n        <Grid item>\r\n        <TextField \r\n          fullWidth \r\n          label=\"Password\" \r\n          value={password}\r\n          onChange={(e) => setPassword(e.target.value)}\r\n          placeholder='Masukan Password Anda'\r\n          variant=\"outlined\"\r\n          type='password'\r\n          size='small'\r\n        />\r\n        </Grid>\r\n        <Button \r\n          type='submit' \r\n          variant='contained' \r\n          style={btnStyle} \r\n          onClick={handleSubmit}\r\n          disabled={!validateForm()}\r\n        >Masuk</Button>\r\n        <Typography>Belum ada ID?\r\n          <Link href=\"/info\"> Info\r\n          </Link>\r\n        </Typography>\r\n        </Grid>\r\n      </PaperStyle>\r\n    </Wrapper>\r\n    </Grid> \r\n  );\r\n}\r\n\r\n\r\nconst Wrapper = styled.div`\r\n  @media (min-width: 1024px){\r\n    background-image: url(\"https://frontendimages014.s3.ap-southeast-1.amazonaws.com/image.JPEG\");\r\n    background-attachment: fixed;\r\n    background-size: cover;\r\n    background-repeat: no-repeat;\r\n    width: 1360px;\r\n    height: 450px;\r\n }\r\n  @media (max-width: 1023px){\r\n    background-color: #cbe8ba;\r\n    height: 1000px;\r\n    width: 100%;\r\n }\r\n`;\r\n\r\nconst PaperStyle = styled.div`\r\n  height: 410px;\r\n  width: 355px;\r\n  padding: 20px;\r\n  border-radius: 5px;\r\n  background-color: #cbe8ba;\r\n  box-shadow: 1px 1px 3px 0px rgba(0,0,0,0.3);\r\n  -webkit-box-shadow: 1px 1px 3px 0px rgba(0,0,0,0.3);\r\n  -moz-box-shadow: 1px 1px 3px 0px rgba(0,0,0,0.3);\r\n  @media (max-width: 1023px){\r\n    background-color: white;\r\n    height: 300px;\r\n    width: 255px;\r\n    margin-left: auto;\r\n    margin-right: auto;\r\n  }\r\n`\r\nconst btnStyle={margin:\"8px 12px\", color: \"black\", backgroundColor: \"#B6C59A\", fontWeight:\"bold\"}","import {\r\n  BrowserRouter as Router,\r\n  Routes,\r\n  Route,\r\n  Navigate,\r\n  } from \"react-router-dom\";\r\n\r\nimport Graphic from \"./Pages/Graphic/Graphic\";\r\nimport Logdata from \"./Pages/LogData/Logdata\";\r\nimport Info from \"./Pages/Info/info\";\r\nimport Login from \"./Pages/Login/login\";\r\nimport \"./App.css\";\r\n\r\nconst PrivateRoute = ({ children }) => {\r\n  const isAuthenticated = localStorage.getItem(\"dev_id\");\r\n  return isAuthenticated ? children : < Navigate to=\"/\" />\r\n}\r\n\r\nconst PublicRoute = ({ children }) => {\r\n  const isAuthenticated = localStorage.getItem(\"dev_id\");\r\n  return isAuthenticated ?  < Navigate to=\"/graphic\" /> : children\r\n}\r\n\r\nfunction App() {\r\n  return (\r\n    <Router>\r\n      <Routes>\r\n        <Route exact path=\"/\" element={<PublicRoute><Login /></PublicRoute>}/>\r\n        <Route exact path=\"/info\" element={<Info />}/>\r\n        <Route exact path=\"/graphic\" element={<PrivateRoute><Graphic /></PrivateRoute>}/>\r\n        <Route exact path=\"/logdata\" element={<PrivateRoute><Logdata /></PrivateRoute>}/>\r\n      </Routes>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://cra.link/PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://cra.link/PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then((registration) => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://cra.link/PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch((error) => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then((response) => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then((registration) => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log('No internet connection found. App is running in offline mode.');\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then((registration) => {\r\n        registration.unregister();\r\n      })\r\n      .catch((error) => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\nserviceWorkerRegistration.register();\r\n"],"sourceRoot":""}